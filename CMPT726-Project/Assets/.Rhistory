wd()
cwd()
pwd()
text = read.csv("Book1.csv", stringsAsFactors = FALSE)
head(text)
library(stringr)
str_replace("//.", text)
str_replace(text, "//.", "")
dotReplaced = str_replace(text, "//.", "")
length(dotReplaced)
dotReplaced = lapply(text, str_replace, pattern = "//.", replace = "")
head(dotReplaced)
head(dotReplaced, 2)
head(text)
text = read.csv("Book1.csv", header = FALSE, stringsAsFactors = FALSE)
head(text)
replaced = str_replace(text, '<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
head(replaced)
text = read.csv("Book1.csv", header = FALSE, stringsAsFactors = FALSE)
replaced = str_replace(text, '<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
class(text)
replaced = str_replace(text$V1, '<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
head(replaced)
replaced = str_replace(text$V1, '<div style="text-align: center;"><strong><span style="font-size:32px;">|<div style="text-align: center;"><strong><span style="font-size:32px;">|<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
head(replaced)
replaced = str_replace_all(text$V1, '<div style="text-align: center;"><strong><span style="font-size:32px;">|<div style="text-align: center;"><strong><span style="font-size:32px;">|<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
head(replaced)
replaced = str_replace_all(text$V1, '<div style="text-align: center;"><strong><span style="font-size:32px;">|<div style="text-align: center;"><strong><span style="font-size:32px;">|<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
head(replaced)
replaced = str_replace_all(text$V1, '<div style="text-align: center;"><strong><span style="font-size:32px;">|</span></strong></div><img src=\"https://kpupsychology.qualtrics.com/CP/Graphic.php?|<div style="text-align: center;"><strong><span style="font-size:32px;">', '')
head(replaced)
replaced_cs = str_replace(replaced, '</span></strong></div><img src=\"https://kpupsychology.qualtrics.com/CP/Graphic.php?', ',')
head(replaced_cs)
replaced = str_replace_all(text$V1, '<div style="text-align: center;"><strong><span style="font-size:32px;">|" style=\"width: 1674px; height: 1326px;\">', '')
replaced_cs = str_replace(replaced, '</span></strong></div><img src=\"https://kpupsychology.qualtrics.com/CP/Graphic.php?', ',')
head(replaced_cs)
replaced_cs = str_replace(replaced, '</span></strong></div><img src=\"https://kpupsychology.qualtrics.com/CP/Graphic.php?|</span></strong></div><img src=\"https://kpupsychology.ca1.qualtrics.com/ControlPanel/Graphic.php?', ',')
head(replaced_cs)
replaced = str_replace_all(text$V1, '</span>|</strong>|</div>|<div style="text-align: center;"><strong><span style="font-size:32px;">|" style=\"width: 1674px; height: 1326px;\">', '')
head(replaced)
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.ca1.qualtrics.com/ControlPanel/Graphic.php?', ',')
head(replaced_cs)
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.ca1.qualtrics.com/ControlPanel/Graphic.php?|<img src=\"https://kpupsychology.qualtrics.com/CP/Graphic.php?', ',')
head(replaced_cs)
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.ca1.qualtrics.com/ControlPanel/Graphic.php//?|<img src=\"https://kpupsychology.qualtrics.com/CP/Graphic.php//?', ',')
head(replaced_cs)
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.ca1.qualtrics.com/.*/Graphic.php//?', ',')
head(replaced_cs)
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.ca1.qualtrics.com/.*/Graphic.php\\?', ',')
head(replaced_cs)
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.*/.*/Graphic.php\\?', ',')
head(replaced_cs)
split_strings = str_split_fixed(replaced_cs, ',', n = 2)
head(split_strings)
write.csv(split_strings, row.names = FALSE)
write.csv(split_strings, "splitKBIT.csv", row.names = FALSE)
Views(replaced_cs)
View(replaced_cs)
split_strings = str_split_fixed(replaced_cs, ',', n = 5)
split_strings
replaced = str_replace_all(text$V1, '</span>|</strong>|</div>|<div style="text-align: center;"><strong><span style="font-size:32px;">|" style=\"width: 1674px; height: 1326px.*>', '')
replaced_cs = str_replace(replaced, '<img src=\"https://kpupsychology.*/.*/Graphic.php\\?', ',')
split_strings = str_split_fixed(replaced_cs, ',', n = 5)
split_strings
split_strings = str_split_fixed(replaced_cs, ',', n = 2)
write.csv(split_strings, "splitKBIT.csv", row.names = FALSE)
text = read.csv("Book1.csv", header = FALSE, stringsAsFactors = FALSE)
replaced = str_replace_all(text$V1, '</span>|</strong>|</div>|<div style="text-align: center;"><strong><span style="font-size:32px;">|" style=\"width: 1674px; height: 1326px.*>', '')
replaced_cs = str_replace(replaced, '<img src=\"', ',')
split_strings = str_split_fixed(replaced_cs, ',', n = 2)
write.csv(split_strings, "splitKBIT.csv", row.names = FALSE)
necessary_packages <- c("tidyverse", "magick", "randomForest", "caret")
for(i in necessary_packages){
if(!require(i, character.only = TRUE)) {
install.packages(i)
require(i, character.only = TRUE)
}
}
rm(necessary_packages)
working_directory = 'C:\Users\Jack\CMPT726-Project\Assets'
setwd(working_directory)
working_directory = 'C:\Users\Jack\CMPT726-Project\Assets'
working_directory = 'C:\\Users\\Jack\\CMPT726-Project\\Assets'
setwd(working_directory)
wd
#Getting the list of images in each filepath
folder_list <- list.files()
folder_list
#Getting the list of images in each filepath
folder_list <- list.files()
file_png <- folder_list[str_detect(folder_list, '\\.png$')]
file_png
####Testing and playing with available functions####
##Testing out reading images
image_test <- image_read(file_png[1])
image_test
#Looking at the structure of the read image
str(image_test) #class 'magick-image'
summary(image_test) #not much information here
#looking at the bitmap dimensions
dim(image_test[[1]]) #it is 3 by 1500 by 1087
str(image_test[[1]])
#There is too many pixel information to be analyzed so reducing pixel information
numeric_image <- as.numeric(image_test[[1]])
numeric_image
str(numeric_image) #looks like it became a matrix and [height, width, channel]
#Testing image read on a matrix of numeric
image_read(numeric_image) #seems like it is possible to read image from numerical data
#Testing what the three channels are
#Testing channel 1
testing_channels <- numeric_image
testing_channels[,,-1] <- 0
image_read(testing_channels) #1 is Red
#There is too many pixel information to be analyzed so reducing pixel information
numeric_image <- as.numeric(image_test[[1]])
numeric_image
numeric_image[,,1]
#looking at the bitmap dimensions
dim(image_test[[1]]) #it is 3 by 1500 by 1087
str(image_test[[1]])
file_png
####Testing and playing with available functions####
##Testing out reading images
image_test <- image_read(file_png[1])
image_test
#looking at the bitmap dimensions
dim(image_test[[1]]) #it is 3 by 1500 by 1087
str(image_test[[1]])
image_textpp1[[1]][1]
image_text[[1]][1]
image_test[[1]][1]
image_test[[1]][1,,]
image_test[[1]][2,,]
image_test[[1]][3,,]
image_test[[1]][4,,]
image_test[[1]][1,,]
image_test[[1]][2,,]
image_test[[1]][3,,]
image_test[[1]][4,,]
image_test[[1]][1,,]
#There is too many pixel information to be analyzed so reducing pixel information
numeric_image <- as.numeric(image_test[[1]])
str(numeric_image) #looks like it became a matrix and [height, width, channel]
numeric_image[,,1]
image_test[[1]][1,,]
class(image_test[[1]][1,,]
#Testing what the three channels are
#Testing channel 1
testing_channels <- numeric_image
class(image_test[[1]][1,,])
class(image_test[[1]][1,1,1])
image_test[[1]][1,1,1]
HexToDec(image_test[[1]][1,1,1])
#There is too many pixel information to be analyzed so reducing pixel information
numeric_image <- as.numeric(image_test[[1]])
str(numeric_image) #looks like it became a matrix and [height, width, channel]
numeric_image[1,,]
image_test
image_test[[2]]
image_test[[1]]
image_test[[1]]
class(image_test[[1]][1,1,1])
readBin(image_test[[1]][1,1,1])
readBin(image_test[[1]][1,1,1], what='integer')
?readBin
readBin(image_test[[1]][1,1,1], what='numeric')
readBin(image_test[[1]][1,1,1], what='integer')
readBin(image_test[[1]][1,,], what='integer')
class(image_test[[1]][1,,])
class(image_test[[1]][1,1,])
readBin(image_test[[1]][1,1,], what='integer')
readBin(image_test[[1]][1,1,1], what='integer')
readBin(image_test[[1]][1,1,], what='integer')
image_test[[1]][1, 1,]
raw <- image_test [[1]][1,,]
raw
as.list(raw)
unlist(raw)
unlist(as.list(raw))
raw
raw[1]
raw[1,]
raw <- image_test [[1]][1,,][1,]
raw
readBin(raw, what='integer')
readBin(raw, what='numeric')
readBin(raw, what='numeric', n = length(raw))
readBin(raw, what='integer', n = length(raw))
readBin(raw, what='int', n = length(raw))
readBin(raw, what='raw', n = length(raw))
readBin(raw, what='complex', n = length(raw))
readBin(raw, what='character', n = length(raw))
as.character(raw)
as.numeric(raw)
raw_as_numeric = as.numeric(raw)
write.csv(raw_as_numeric, 'test.csv')
test <- data.frame()
cbind(test, raw_as_numeric)
test <- data.frame(1:length(raw_as_numeric))
cbind(test, raw_as_numeric)
rbind(test, raw_as_numeric)
test <- data.frame(raw_as_numeric)
matrix_test <- as.matrix(test)
matrix_test
matrix_test <- t(as.matrix(test))
matrix_test
write.csv(matrix_test, 'test.csv')
image_test
image_test[[1]]
str(image_test[[1]])
raw <- image_test [[1]][1,,][1,]
raw
raw <- image_test [[1]][1,,]
raw
raw <- image_test [[1]][2,,]
raw
raw <- image_test [[1]][2,,][1,]
raw_as_numeric = as.numeric(raw)
test <- data.frame(raw_as_numeric)
matrix_test <- t(as.matrix(test))
write.csv(matrix_test, 'test.csv')
source('~/.active-rstudio-document')
image_test
image_test
image_test[1]
image_test[[1]
]
image_test[[2]]
image_test[[1]]
dim(image_test[[1]])
str(image_test[[1]])
length(raw)
raw <- image_test [[1]][1,,]
length(raw)
raw_as_numeric = as.numeric(raw)
raw
test <- data.frame(raw_as_numeric)
test
matrix_test <- t(as.matrix(test))
write.csv(matrix_test, 'test.csv')
working_directory <- 'C:\\Users\\Jack\\CMPT726-Project\\Assets'
setwd(working_directory)
folder_list <- list.files()
file_png <- folder_list[str_detect(folder_list, '\\.png$')]
image_test <- image_read(file_png[1])
image_test
image_test[[1]]
dim(image_test[[1]])
str(image_test[[1]])
raw
raw <- image_test [[1]][1,,]
raw
